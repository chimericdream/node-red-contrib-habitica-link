#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

npx commitlint < "$1"

# Prepend the name of the current branch to the commit message
BRANCH_NAME=$(git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/")

if [ -n "$BRANCH_NAME" ]; then
    if [ "$BRANCH_NAME" = "main" ] || [ "$BRANCH_NAME" = "develop" ]; then
        echo "You cannot commit to the main branches directly. Please create a fix, feature, experiment, or misc branch."
        exit 1
    fi
fi

BRANCH_FORMAT_REGEX="^((fix|feature)\/[0-9]+(-[-a-z0-9]+)?|(release|hotfix)\/v[0-9]+.[0-9]+.[0-9]+(-.+)?|(misc|experiment)\/[-_a-zA-Z0-9]+)$"
BRANCH_NAME_MATCH=$(echo "$BRANCH_NAME" | grep -Eo "$BRANCH_FORMAT_REGEX" || :)

if [ -n "$BRANCH_NAME_MATCH" ]; then
    echo "$(cat "$1") [$BRANCH_NAME]" > "$1"
    exit 0
fi

echo "The current branch must match one of the following patterns:"
echo "    fix/{issue #}(-{optional description})"
echo "    feature/{issue #}(-{optional description})"
echo "    experiment/{description}"
echo "    misc/{description}"
echo "    release/v#.#.#(-{optional pre-release indicator})"
echo "    hotfix/v#.#.#(-{optional pre-release indicator})"
echo ""
echo "Examples:"
echo "    fix/1234"
echo "    fix/1234-issue-with-the-thing"
echo "    feature/555-new-hotness"
echo "    experiment/trying-something-out"
echo "    release/v1.2.3"
echo "    ..."
echo ""

exit 1
